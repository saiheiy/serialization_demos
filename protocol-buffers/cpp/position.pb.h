// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: position.proto

#ifndef PROTOBUF_position_2eproto__INCLUDED
#define PROTOBUF_position_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace demo {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_position_2eproto();
void protobuf_AssignDesc_position_2eproto();
void protobuf_ShutdownFile_position_2eproto();

class Position;

// ===================================================================

class Position : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:demo.Position) */ {
 public:
  Position();
  virtual ~Position();

  Position(const Position& from);

  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Position& default_instance();

  void Swap(Position* other);

  // implements Message ----------------------------------------------

  inline Position* New() const { return New(NULL); }

  Position* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Position& from);
  void MergeFrom(const Position& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Position* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 positionId = 1;
  void clear_positionid();
  static const int kPositionIdFieldNumber = 1;
  ::google::protobuf::int64 positionid() const;
  void set_positionid(::google::protobuf::int64 value);

  // optional string secName = 2;
  void clear_secname();
  static const int kSecNameFieldNumber = 2;
  const ::std::string& secname() const;
  void set_secname(const ::std::string& value);
  void set_secname(const char* value);
  void set_secname(const char* value, size_t size);
  ::std::string* mutable_secname();
  ::std::string* release_secname();
  void set_allocated_secname(::std::string* secname);

  // optional int32 accountId = 3;
  void clear_accountid();
  static const int kAccountIdFieldNumber = 3;
  ::google::protobuf::int32 accountid() const;
  void set_accountid(::google::protobuf::int32 value);

  // optional double posQty = 4;
  void clear_posqty();
  static const int kPosQtyFieldNumber = 4;
  double posqty() const;
  void set_posqty(double value);

  // optional double avgCost = 5;
  void clear_avgcost();
  static const int kAvgCostFieldNumber = 5;
  double avgcost() const;
  void set_avgcost(double value);

  // optional double mv = 6;
  void clear_mv();
  static const int kMvFieldNumber = 6;
  double mv() const;
  void set_mv(double value);

  // @@protoc_insertion_point(class_scope:demo.Position)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 positionid_;
  ::google::protobuf::internal::ArenaStringPtr secname_;
  double posqty_;
  double avgcost_;
  double mv_;
  ::google::protobuf::int32 accountid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_position_2eproto();
  friend void protobuf_AssignDesc_position_2eproto();
  friend void protobuf_ShutdownFile_position_2eproto();

  void InitAsDefaultInstance();
  static Position* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Position

// optional int64 positionId = 1;
inline void Position::clear_positionid() {
  positionid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Position::positionid() const {
  // @@protoc_insertion_point(field_get:demo.Position.positionId)
  return positionid_;
}
inline void Position::set_positionid(::google::protobuf::int64 value) {
  
  positionid_ = value;
  // @@protoc_insertion_point(field_set:demo.Position.positionId)
}

// optional string secName = 2;
inline void Position::clear_secname() {
  secname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Position::secname() const {
  // @@protoc_insertion_point(field_get:demo.Position.secName)
  return secname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Position::set_secname(const ::std::string& value) {
  
  secname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:demo.Position.secName)
}
inline void Position::set_secname(const char* value) {
  
  secname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:demo.Position.secName)
}
inline void Position::set_secname(const char* value, size_t size) {
  
  secname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:demo.Position.secName)
}
inline ::std::string* Position::mutable_secname() {
  
  // @@protoc_insertion_point(field_mutable:demo.Position.secName)
  return secname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Position::release_secname() {
  // @@protoc_insertion_point(field_release:demo.Position.secName)
  
  return secname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Position::set_allocated_secname(::std::string* secname) {
  if (secname != NULL) {
    
  } else {
    
  }
  secname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secname);
  // @@protoc_insertion_point(field_set_allocated:demo.Position.secName)
}

// optional int32 accountId = 3;
inline void Position::clear_accountid() {
  accountid_ = 0;
}
inline ::google::protobuf::int32 Position::accountid() const {
  // @@protoc_insertion_point(field_get:demo.Position.accountId)
  return accountid_;
}
inline void Position::set_accountid(::google::protobuf::int32 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:demo.Position.accountId)
}

// optional double posQty = 4;
inline void Position::clear_posqty() {
  posqty_ = 0;
}
inline double Position::posqty() const {
  // @@protoc_insertion_point(field_get:demo.Position.posQty)
  return posqty_;
}
inline void Position::set_posqty(double value) {
  
  posqty_ = value;
  // @@protoc_insertion_point(field_set:demo.Position.posQty)
}

// optional double avgCost = 5;
inline void Position::clear_avgcost() {
  avgcost_ = 0;
}
inline double Position::avgcost() const {
  // @@protoc_insertion_point(field_get:demo.Position.avgCost)
  return avgcost_;
}
inline void Position::set_avgcost(double value) {
  
  avgcost_ = value;
  // @@protoc_insertion_point(field_set:demo.Position.avgCost)
}

// optional double mv = 6;
inline void Position::clear_mv() {
  mv_ = 0;
}
inline double Position::mv() const {
  // @@protoc_insertion_point(field_get:demo.Position.mv)
  return mv_;
}
inline void Position::set_mv(double value) {
  
  mv_ = value;
  // @@protoc_insertion_point(field_set:demo.Position.mv)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace demo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_position_2eproto__INCLUDED
